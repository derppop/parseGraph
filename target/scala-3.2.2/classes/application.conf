NGSimulator {
    seed = 100
    outputDirectory = "s3://441-mapreduce/graphs/"
    NetModel {
        distanceSpreadThreshold = 0.05
        numberOfExperiments = 100
        perturbationCoefficient = 0.3
        dissimulationCoefficient = 0.15
        distanceCoefficient = 0.2
        edgeProbability = 0.001
        statesTotal = 1000
        desiredReachabilityCoverage = 1.0
        numberOfWalks = 50
        maxBranchingFactor = 7
        maxDepth = 5
        maxProperties = 20
        propValueRange = 100
        actionType = 20
        actionRange = 10
        connectedness = 2
        maxWalkPathLengthCoeff = 2
        graphWalkTerminationPolicy = ${NGSimulator.Constants.MaxPathLength}
        graphWalkNodeTerminationProbability = 0.001d
    }
    CostRewards {
        malAppBudget = 2700.0
        costOfDetection = 0.2d
        serviceRewardProbability = 0.3
        serviceReward = 10d
        servicePenalty = 3d
        targetAppScore = 5
        targetAppLowPenalty = 1
        targetAppHighPenalty = 2
    }
    Constants {
       MaxPathLength  = "maxpathlength"
       UntilCycle = "untilcycle"
       All = "all"
    }
}

Job {
  shardDirectory = "s3://441-mapreduce/shards/"
  jobOutputDirectory = "s3://441-mapreduce/result/"
  bucketDirectory = "s3://441-mapreduce/"
}

Preprocessor {
  subGraphRatio = 0.05
  minSubGraphSize = 3
  graphName = "graph.ngs"
  perturbedGraphName = "perturbedGraph.ngs"
}

Reducer {
  simScoreThreshold = 0.8
}

SimRank {
  propertySimWeight = 0.2
  childrenSimWeight = 0.3
  depthSimWeight = 0.15 ; was 0.1
  branchFactorSimWeight = 0.1 ; was 0.15
  storedValSimWeight = 0.25
}